group_id: org.concopilot.example.modelscope.plugin
artifact_id: card_detection_correction
version: 0.0.0

type: plugin
as_plugin: true

info:
  title: ModelScopeCardDetectionCorrection
  description: "This plugin provides an API to help transform cards presented in an image or image list to their correct orientation and preset sizes."
  description_for_model: "You can use this API to detect cards in images and adjust those cards into correct orientation and size."
commands:
  -
    command_name: detect_and_correct
    description: "Detect cards from the input images and correct those detected cards into the correct orientation and size.
                  All input parameters are optional, but there must be at least one valid parameter representing an image or image list."
    parameter:
      type:
        img_data:
          type: Union[numpy.ndarray, PIL.Image.Image]
          description: the input image data. It can be represented in either python `PIL.Image.Image` or `numpy.ndarray`.
          required: false
          asset_ref_acceptable: true
        img_url:
          type: str
          description: the url of the input image.
          required: false
        img_path:
          type: str
          description: the storage path of the input image.
          required: false
        img_data_list:
          type: List[Union[numpy.ndarray, PIL.Image.Image]]
          description: the input image data list. Each element represents an image and can be in either python `PIL.Image.Image` or `numpy.ndarray`.
          required: false
          asset_ref_acceptable: true
        img_url_list:
          type: List[str]
          description: the url list of the input images.
          required: false
          asset_ref_acceptable: true
        img_path_list:
          type: List[str]
          description: the storage path list of the input images.
          required: false
          asset_ref_acceptable: true
      asset_ref_acceptable: true
    response:
      type:
        result:
          type:
            _type_ref: detect_and_correct_response_element
            polygons:
              type: List[numpy.ndarray]
              description: \"Each element is a shape (8) numpy.ndarray and represents the 4 vertices of one detection of a card.
                The order of the vertices is left-top, right-top, right-bottom, left-bottom.\"
              optional: false
            scores:
              type: List[float]
              description: The confidence coefficient list for each detection of a card. Range in [0, 1]
              optional: false
            labels:
              type: List[int]
              enum:
                - 0 # represents a non-photocopy
                - 1 # represents a photocopy
              description: The photocopy classifier list for each detection of a card.
              optional: false
            layout:
              type: List[int]
              enum:
                - 0 # no-rotation
                - 1 # rotate 90 degrees clockwise
                - 2 # rotate 180 degrees clockwise
                - 3 # rotate 270 degrees clockwise
              description: The rotation classifier list for each detection of a card.
              optional: false
            output_imgs:
              type: List[numpy.ndarray]
              description: The image list for each detection of a card. Each element is a `np.ndarray` represents the corrected image of a detected card.
              optional: false
          description: The detection result. If there is only one non-list parameter passed, this processing result will be returned.
          optional: true
        result_list:
          type: List[detect_and_correct_response_element]
          description: "The result list represents the detection and correction results.
                        If there are multiple inputs, this result list will be returned with each element a Dict and represents the result to the corresponded input.
                        The order of the list will be the same to the combination of all types of inputs one by one,
                        that is, [`img_data`, `img_url`, `img_path`]+[each element in `img_data_list`]+[each element in `img_url_list`]+[each element in `img_path_list`]."
          optional: true

setup:
  pip:
    - concopilot_examples>=0.0.3
    - modelscope
    - torch
    - transformers
    - sentencepiece
    - opencv-python
  package: concopilot_examples.plugin.modelscope.card_detection_correction

url: https://github.com/concopilot/concopilot

developers:
  -
    name: ZHONG Weikun
    id: xiaoshenxian
    url: https://github.com/xiaoshenxian

licenses:
  -
    name: The Apache License, Version 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.txt

config:
  #id: default
  #name: null

  resources:
    -
      type: model
      name: card_detection_correction
